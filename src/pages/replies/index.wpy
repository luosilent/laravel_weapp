<style lang="less">
.replyer-avatar {
  padding: 4px;
  border: 1px solid #ddd;
  border-radius: 4px;
  width: 50px;
  height: 50px;
}
</style>
<template>
  <view class="page">
    <view class="page__bd">
      <view class="weui-panel weui-panel_access">
        <view class="weui-panel__bd">
          <repeat for="{{ replies }}" wx:key="id" index="index" item="reply">
            <view class="weui-media-box weui-media-box_appmsg" hover-class="weui-cell_active">
              <navigator class="weui-media-box__hd weui-media-box__hd_in-appmsg" url="/pages/users/show?id={{ reply.user_id }}">
                <image class="replyer-avatar weui-media-box__thumb" src="{{ reply.user.avatar }}" />
              </navigator>
              <view class="weui-media-box__bd weui-media-box__bd_in-appmsg">
                <view class="weui-media-box__title">{{ reply.user.name }}</view>
                <view class="weui-media-box__desc"><rich-text nodes="{{ reply.content }}" bindtap="tap"></rich-text></view>
                <view class="weui-media-box__info">
                  <view class="weui-media-box__info__meta">{{ reply.created_at_diff }}</view>
                </view>
              </view>
            </view>
          </repeat>
          <view class="weui-loadmore weui-loadmore_line" wx:if="{{ noMoreData }}">
            <view class="weui-loadmore__tips weui-loadmore__tips_in-line">没有更多数据</view>
          </view>
        </view>
      </view>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import util from '@/utils/util'
  import api from '@/utils/api'

  export default class replyIndex extends wepy.page {
    config = {
      // 可以下拉刷新
      enablePullDownRefresh: true,
      // 页面标题
      navigationBarTitleText: '回复列表'
    }
    data = {
      // 回复数据
      replies: [],
      // 是否有更多数据
      noMoreData: false,
      // 是否在加载中
      isLoading: false,
      // 当前页数
      page: 1,
      // 话题 id
      topicId: 0
    }
    // 获取话题回复
    async getReplies(reset = false) {
      try {
        // 请求话题回复接口
        let repliesResponse = await api.request({
          url: 'topics/' + this.topicId + '/replies',
          data: {
            page: this.page,
            include: 'user'
          }
        })

        if (repliesResponse.statusCode === 200) {
          let replies = repliesResponse.data.data

          // 格式化回复创建时间
          replies.forEach(function (reply) {
            reply.created_at_diff = util.diffForHumans(reply.created_at)
          })
          // 如果reset不为true则合并 this.replies；否则直接覆盖
          this.replies = reset ? replies : this.replies.concat(replies)

          let pagination = repliesResponse.data.meta.pagination

          // 根据分页数据判断是否有更多数据
          if (pagination.current_page === pagination.total_pages) {
            this.noMoreData = true
          }
          this.$apply()
        }

        return repliesResponse
      } catch (err) {
        console.log(err)
        wepy.showModal({
          title: '提示',
          content: '服务器错误，请联系管理员'
        })
      }
    }
    async onLoad(options) {
      // 获取 URL 参数中的 话题id
      this.topicId = options.topic_id
      this.getReplies()
    }
    async onPullDownRefresh() {
      this.noMoreData = false
      this.page = 1
      await this.getReplies(true)
      wepy.stopPullDownRefresh()
    }
    async onReachBottom () {
      // 如果没有更多数据，或者正在加载，直接返回
      if (this.noMoreData || this.isLoading) {
        return
      }
      // 设置为加载中
      this.isLoading = true
      this.page = this.page + 1
      await this.getReplies()
      this.isLoading = false
      this.$apply()
    }
  }
</script>
